<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
    <system threads="0" />
    <experiment length="0"
                logging="true"
                ticks_per_second="10"
                random_seed="124" />
  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>

    <turtlebot4_test_controller id="fdc"
                                        library="build/argos3/testing/controllers/turtlebot4_test/libturtlebot4_test.so">
      <actuators>
        <differential_steering implementation="default" />
      </actuators>
      <sensors>
        <!-- <turtlebot4_light                       implementation="rot_z_only" show_rays="true" /> -->
        <turtlebot4_ground                       implementation="rot_z_only" />
        <turtlebot4_proximity implementation="default" show_rays="true" />
        <turtlebot4_lidar implementation="default" num_readings="360" show_rays="true" />
      </sensors>
      <params velocity="60" />
    </turtlebot4_test_controller>

  </controllers>

<!-- ****************** -->
  <!-- * Loop functions * -->
  <!-- ****************** -->
  <loop_functions library="build/argos3/testing/loop_functions/test_loop_functions/libtest_loop_functions"
                  label="test_loop_functions">
    <testing />
  </loop_functions>

  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <!-- <arena size="500, 500, 10" center="0,0,5">

    <floor id="floor"
           source="loop_functions"
           pixels_per_meter="500" />

    <box id="wall_north" size="500,10,10" movable="false">
      <body position="0,250,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="500,10,10" movable="false">
      <body position="0,-250,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="10,500,10" movable="false">
      <body position="250,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="10,500,10" movable="false">
      <body position="-250,0,0" orientation="0,0,0" />
    </box> -->
    <arena size="300, 300, 10" center="0,0,5">

    <floor id="floor"
           source="loop_functions"
           pixels_per_meter="500" />

    <box id="wall_north" size="300,10,10" movable="false">
      <body position="0,150,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="300,10,10" movable="false">
      <body position="0,-150,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="10,300,10" movable="false">
      <body position="150,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="10,300,10" movable="false">
      <body position="-150,0,0" orientation="0,0,0" />
    </box>

    <!--
        You can distribute entities randomly. Here, we distribute
        10 turtlebot4's in this way:
        - the position is uniformly distributed
        on the ground, in the square whose corners are (-2,-2) and (2,2)
        - the orientations are non-zero only when rotating around Z and chosen
        from a gaussian distribution, whose mean is zero degrees and
        standard deviation is 360 degrees.
    -->
    <distribute>
      <position method="uniform" min="-100,-100,0" max="100,100,0" />

      <!-- <position method="uniform" min="-200,-200,0" max="200,200,0" /> -->
      <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" />
      <entity quantity="2" max_trials="100">
        <turtlebot4 id="fb">
          <controller config="fdc" />
        </turtlebot4>
      </entity>
    </distribute>

    <!--
        We distribute 5 boxes uniformly in position and rotation around Z.
    -->
    <distribute>
      <position method="uniform" min="-100,-100,0" max="100,100,0" />

      <!-- <position method="uniform" min="-200,-200,0" max="200,200,0" /> -->
      <!-- <position method="uniform" min="-2,-2,0" max="2,2,0" /> -->
      <orientation method="uniform" min="0,0,0" max="360,0,0" />
      <entity quantity="1" max_trials="100">
        <box id="b" size="30,30,50" movable="false" />
        <!-- <box id="b" size="0.3,0.3,0.5" movable="false" /> -->
      </entity>
    </distribute>

    <!--
        We distribute cylinders uniformly in position and with
        constant rotation (rotating a cylinder around Z does not
        matter)
    -->
    <distribute>
      <position method="uniform" min="-100,-100,0" max="100,100,0" />

      <!-- <position method="uniform" min="-200,-200,0" max="200,200,0" /> -->
      <!-- <position method="uniform" min="-2,-2,0" max="2,2,0" /> -->
      <orientation method="constant" values="0,0,0" />
      <entity quantity="1" max_trials="100">
        <cylinder id="c" height="50" radius="15" movable="false" />
      </entity>
    </distribute>

    <light id="light"
           position="0,0,0"
           orientation="0,0,0"
           color="yellow"
           intensity="3"
           medium="leds" />

  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <dynamics2d id="dyn2d" />
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
    <led id="leds" />
  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <visualization>
    <qt-opengl>
      <camera>
        <placements>
          <!-- <placement index="0" position="0,0,0" look_at="0,0,0" up="100,0,0" lens_focal_length="25" /> -->
          <placement index="0" position="-100,10,100" look_at="0,0,0" up="100,0,0" lens_focal_length="25" />

        </placements>
      </camera>
    </qt-opengl>
  </visualization>

</argos-configuration>
